{
  "address": "0x241f44A7A4A810281d123d60762F6717bfd29e94",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "spaceId",
          "type": "string"
        }
      ],
      "name": "ClosedPersonalSpace",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "spaceName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "imgLink",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "spaceId",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "goalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct SpaceDetails",
          "name": "SD",
          "type": "tuple"
        }
      ],
      "name": "CreatedPersonalSpace",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "spaceId",
          "type": "string"
        }
      ],
      "name": "DeletedPersonalSpace",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "funder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "spaceId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FundedPersonalSpace",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "spaceName",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "imgLink",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "spaceId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "goalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "internalType": "struct SpaceDetails",
              "name": "SD",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum Personal.FundsState",
                  "name": "currentFundState",
                  "type": "uint8"
                },
                {
                  "internalType": "enum Personal.ActivityState",
                  "name": "currentActivityState",
                  "type": "uint8"
                }
              ],
              "internalType": "struct Personal.SpaceStates",
              "name": "SS",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "currentBalance",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct Personal.PersonalDetails",
          "name": "PD",
          "type": "tuple"
        }
      ],
      "name": "UpdatedPersonalSpace",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "withdrawer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "spaceId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawnPersonalSpace",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "spaceName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "imgLink",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "spaceId",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "goalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "internalType": "struct SpaceDetails",
          "name": "_SD",
          "type": "tuple"
        }
      ],
      "name": "createPersonalSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_spaceId",
          "type": "string"
        }
      ],
      "name": "doesPersonalSpaceExist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isExistent",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_spaceId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "fundPersonalSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllPersonalSpaces",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "spaceName",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "imgLink",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "spaceId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "goalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "internalType": "struct SpaceDetails",
              "name": "SD",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum Personal.FundsState",
                  "name": "currentFundState",
                  "type": "uint8"
                },
                {
                  "internalType": "enum Personal.ActivityState",
                  "name": "currentActivityState",
                  "type": "uint8"
                }
              ],
              "internalType": "struct Personal.SpaceStates",
              "name": "SS",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "currentBalance",
              "type": "uint256"
            }
          ],
          "internalType": "struct Personal.PersonalDetails[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyPersonalSpaces",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "spaceName",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "imgLink",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "spaceId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "goalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "internalType": "struct SpaceDetails",
              "name": "SD",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum Personal.FundsState",
                  "name": "currentFundState",
                  "type": "uint8"
                },
                {
                  "internalType": "enum Personal.ActivityState",
                  "name": "currentActivityState",
                  "type": "uint8"
                }
              ],
              "internalType": "struct Personal.SpaceStates",
              "name": "SS",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "currentBalance",
              "type": "uint256"
            }
          ],
          "internalType": "struct Personal.PersonalDetails[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_spaceId",
          "type": "string"
        }
      ],
      "name": "getPersonalSpaceById",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "spaceName",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "imgLink",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "spaceId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "goalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "internalType": "struct SpaceDetails",
              "name": "SD",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum Personal.FundsState",
                  "name": "currentFundState",
                  "type": "uint8"
                },
                {
                  "internalType": "enum Personal.ActivityState",
                  "name": "currentActivityState",
                  "type": "uint8"
                }
              ],
              "internalType": "struct Personal.SpaceStates",
              "name": "SS",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "currentBalance",
              "type": "uint256"
            }
          ],
          "internalType": "struct Personal.PersonalDetails",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getPersonalSpacesByOwner",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "spaceName",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "imgLink",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "spaceId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "goalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "internalType": "struct SpaceDetails",
              "name": "SD",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum Personal.FundsState",
                  "name": "currentFundState",
                  "type": "uint8"
                },
                {
                  "internalType": "enum Personal.ActivityState",
                  "name": "currentActivityState",
                  "type": "uint8"
                }
              ],
              "internalType": "struct Personal.SpaceStates",
              "name": "SS",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "currentBalance",
              "type": "uint256"
            }
          ],
          "internalType": "struct Personal.PersonalDetails[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "spaceName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "imgLink",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "spaceId",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "goalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "internalType": "struct SpaceDetails",
          "name": "_SD",
          "type": "tuple"
        }
      ],
      "name": "updatePersonalSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_spaceId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFromPersonalSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x634fc4b55b84ff38dde84b601e238235a3ce5f26208267bc3567cbf9d0e7008b",
  "receipt": {
    "to": null,
    "from": "0x8E912eE99bfaECAe8364Ba6604612FfDfE46afd2",
    "contractAddress": "0x241f44A7A4A810281d123d60762F6717bfd29e94",
    "transactionIndex": 24,
    "gasUsed": "2901982",
    "logsBloom": "0x
    "blockHash": "0xcc21107c0eaf61e6ea7ce0d820ef3d29344126635134ff2b9d5e25d469275eaf",
    "transactionHash": "0x634fc4b55b84ff38dde84b601e238235a3ce5f26208267bc3567cbf9d0e7008b",
    "logs": [
      {
        "transactionIndex": 24,
        "blockNumber": 39599561,
        "transactionHash": "0x634fc4b55b84ff38dde84b601e238235a3ce5f26208267bc3567cbf9d0e7008b",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000008e912ee99bfaecae8364ba6604612ffdfe46afd2",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000ffaf902c10b42000000000000000000000000000000000000000000000000038ee368c560f2ac0000000000000000000000000000000000000000000033f9f8f91d288ee64f09000000000000000000000000000000000000000000000000037ee86fc29fe76a0000000000000000000000000000000000000000000033f9f909182191a75a4b",
        "logIndex": 161,
        "blockHash": "0xcc21107c0eaf61e6ea7ce0d820ef3d29344126635134ff2b9d5e25d469275eaf"
      }
    ],
    "blockNumber": 39599561,
    "cumulativeGasUsed": "15077880",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "f6177dde8a760e64bac26363ff513fdb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"spaceId\",\"type\":\"string\"}],\"name\":\"ClosedPersonalSpace\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"spaceName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imgLink\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"spaceId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct SpaceDetails\",\"name\":\"SD\",\"type\":\"tuple\"}],\"name\":\"CreatedPersonalSpace\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"spaceId\",\"type\":\"string\"}],\"name\":\"DeletedPersonalSpace\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"spaceId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundedPersonalSpace\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"spaceName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imgLink\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"spaceId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct SpaceDetails\",\"name\":\"SD\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum Personal.FundsState\",\"name\":\"currentFundState\",\"type\":\"uint8\"},{\"internalType\":\"enum Personal.ActivityState\",\"name\":\"currentActivityState\",\"type\":\"uint8\"}],\"internalType\":\"struct Personal.SpaceStates\",\"name\":\"SS\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct Personal.PersonalDetails\",\"name\":\"PD\",\"type\":\"tuple\"}],\"name\":\"UpdatedPersonalSpace\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"spaceId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawnPersonalSpace\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"spaceName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imgLink\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"spaceId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct SpaceDetails\",\"name\":\"_SD\",\"type\":\"tuple\"}],\"name\":\"createPersonalSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_spaceId\",\"type\":\"string\"}],\"name\":\"doesPersonalSpaceExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isExistent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_spaceId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"fundPersonalSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPersonalSpaces\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"spaceName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imgLink\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"spaceId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct SpaceDetails\",\"name\":\"SD\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum Personal.FundsState\",\"name\":\"currentFundState\",\"type\":\"uint8\"},{\"internalType\":\"enum Personal.ActivityState\",\"name\":\"currentActivityState\",\"type\":\"uint8\"}],\"internalType\":\"struct Personal.SpaceStates\",\"name\":\"SS\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct Personal.PersonalDetails[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyPersonalSpaces\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"spaceName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imgLink\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"spaceId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct SpaceDetails\",\"name\":\"SD\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum Personal.FundsState\",\"name\":\"currentFundState\",\"type\":\"uint8\"},{\"internalType\":\"enum Personal.ActivityState\",\"name\":\"currentActivityState\",\"type\":\"uint8\"}],\"internalType\":\"struct Personal.SpaceStates\",\"name\":\"SS\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct Personal.PersonalDetails[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_spaceId\",\"type\":\"string\"}],\"name\":\"getPersonalSpaceById\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"spaceName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imgLink\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"spaceId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct SpaceDetails\",\"name\":\"SD\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum Personal.FundsState\",\"name\":\"currentFundState\",\"type\":\"uint8\"},{\"internalType\":\"enum Personal.ActivityState\",\"name\":\"currentActivityState\",\"type\":\"uint8\"}],\"internalType\":\"struct Personal.SpaceStates\",\"name\":\"SS\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct Personal.PersonalDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getPersonalSpacesByOwner\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"spaceName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imgLink\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"spaceId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct SpaceDetails\",\"name\":\"SD\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum Personal.FundsState\",\"name\":\"currentFundState\",\"type\":\"uint8\"},{\"internalType\":\"enum Personal.ActivityState\",\"name\":\"currentActivityState\",\"type\":\"uint8\"}],\"internalType\":\"struct Personal.SpaceStates\",\"name\":\"SS\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct Personal.PersonalDetails[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"spaceName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imgLink\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"spaceId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct SpaceDetails\",\"name\":\"_SD\",\"type\":\"tuple\"}],\"name\":\"updatePersonalSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_spaceId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFromPersonalSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Personal.sol\":\"Personal\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\"},\"src/Personal.sol\":{\"content\":\"// SPDX-License-Identifier: Apache 2.0\\npragma solidity ^0.8.7;\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nstruct SpaceDetails {\\n    IERC20 token;\\n    address payable owner;\\n    string spaceName;\\n    string imgLink;\\n    string spaceId;\\n    uint256 goalAmount;\\n    uint256 deadline;\\n}\\n\\ncontract Personal {\\n    using SafeMath for uint256;\\n\\n    enum FundsState {\\n        isFundable,\\n        isFullyFunded\\n    }\\n    enum ActivityState {\\n        isActive,\\n        isInActive\\n    }\\n\\n    //Personal Space Structs\\n    struct SpaceStates {\\n        FundsState currentFundState;\\n        ActivityState currentActivityState;\\n    }\\n\\n    struct PersonalDetails {\\n        SpaceDetails SD;\\n        SpaceStates SS;\\n        uint256 currentBalance;\\n    }\\n\\n    //List of all Personal Spaces\\n    PersonalDetails[] allPersonalSpaces;\\n    mapping(string => uint256) personalSpaceIndex;\\n    mapping(address => PersonalDetails[]) myPersonalSpaces;\\n    mapping(address => mapping(string => uint256)) myPersonalSpaceIdx;\\n\\n    //Personal Space events\\n    event CreatedPersonalSpace(address owner, SpaceDetails SD);\\n    event FundedPersonalSpace(address funder, string spaceId, uint256 amount);\\n    event WithdrawnPersonalSpace(\\n        address withdrawer,\\n        string spaceId,\\n        uint256 amount\\n    );\\n    event UpdatedPersonalSpace(PersonalDetails PD);\\n    event ClosedPersonalSpace(address owner, string spaceId);\\n    event DeletedPersonalSpace(address owner, string spaceId);\\n\\n    constructor() {}\\n\\n    function createPersonalSpace(SpaceDetails memory _SD) external {\\n        require(msg.sender == _SD.owner, \\\"Must be owner\\\");\\n        require(personalSpaceIndex[_SD.spaceId] == 0, \\\"SpaceId already exists\\\");\\n        require(\\n            myPersonalSpaceIdx[msg.sender][_SD.spaceId] == 0,\\n            \\\"SpaceId already exists\\\"\\n        );\\n        require(_SD.owner != address(0), \\\"Owner cannot be 0 address\\\");\\n        require(_SD.token != IERC20(address(0)), \\\"Token cannot be 0 address\\\");\\n        require(bytes(_SD.spaceName).length > 0, \\\"Name cannot be empty\\\");\\n        require(_SD.deadline > block.timestamp, \\\"Deadline must be in future\\\");\\n        require(_SD.goalAmount > 0, \\\"Goal must be greater than 0\\\");\\n\\n        SpaceStates memory _SS = SpaceStates(\\n            FundsState.isFundable,\\n            ActivityState.isActive\\n        );\\n\\n        uint256 _currentBalance = 0;\\n\\n        PersonalDetails memory _PD = PersonalDetails(_SD, _SS, _currentBalance);\\n\\n        allPersonalSpaces.push(_PD);\\n        personalSpaceIndex[_SD.spaceId] = allPersonalSpaces.length;\\n        myPersonalSpaces[msg.sender].push(_PD);\\n        myPersonalSpaceIdx[msg.sender][_SD.spaceId] = myPersonalSpaces[\\n            msg.sender\\n        ].length;\\n\\n        emit CreatedPersonalSpace(msg.sender, _SD);\\n    }\\n\\n    function getAllPersonalSpaces()\\n        external\\n        view\\n        returns (PersonalDetails[] memory)\\n    {\\n        return allPersonalSpaces;\\n    }\\n\\n    function getPersonalSpaceById(\\n        string memory _spaceId\\n    ) external view returns (PersonalDetails memory) {\\n        require(personalSpaceIndex[_spaceId] != 0, \\\"Space does not exist\\\");\\n        return allPersonalSpaces[personalSpaceIndex[_spaceId].sub(1)];\\n    }\\n\\n    function getPersonalSpacesByOwner(\\n        address _owner\\n    ) external view returns (PersonalDetails[] memory) {\\n        return myPersonalSpaces[_owner];\\n    }\\n\\n    function getMyPersonalSpaces()\\n        external\\n        view\\n        returns (PersonalDetails[] memory)\\n    {\\n        return myPersonalSpaces[msg.sender];\\n    }\\n\\n    function doesPersonalSpaceExist(\\n        address owner,\\n        string memory _spaceId\\n    ) external view returns (bool isExistent) {\\n        if (personalSpaceIndex[_spaceId] == 0) {\\n            return false;\\n        }\\n        if (myPersonalSpaceIdx[owner][_spaceId] == 0) {\\n            return false;\\n        }\\n    }\\n\\n    function updatePersonalSpace(SpaceDetails memory _SD) external {\\n        require(msg.sender == _SD.owner, \\\"Must be owner\\\");\\n        require(personalSpaceIndex[_SD.spaceId] != 0, \\\"SpaceId does not exist\\\");\\n        require(\\n            myPersonalSpaceIdx[msg.sender][_SD.spaceId] != 0,\\n            \\\"SpaceId does not exist\\\"\\n        );\\n        require(_SD.owner != address(0), \\\"Owner cannot be 0 address\\\");\\n        require(_SD.token != IERC20(address(0)), \\\"Token cannot be 0 address\\\");\\n        require(bytes(_SD.spaceName).length > 0, \\\"Name cannot be empty\\\");\\n        require(_SD.deadline > block.timestamp, \\\"Deadline must be in future\\\");\\n        require(_SD.goalAmount > 0, \\\"Goal must be greater than 0\\\");\\n\\n        uint256 _balance = allPersonalSpaces[\\n            personalSpaceIndex[_SD.spaceId].sub(1)\\n        ].currentBalance;\\n\\n        SpaceStates memory _CS = allPersonalSpaces[\\n            personalSpaceIndex[_SD.spaceId].sub(1)\\n        ].SS;\\n\\n        PersonalDetails memory _PD = PersonalDetails(_SD, _CS, _balance);\\n        allPersonalSpaces[personalSpaceIndex[_SD.spaceId].sub(1)] = _PD;\\n        myPersonalSpaces[msg.sender][\\n            myPersonalSpaceIdx[msg.sender][_SD.spaceId].sub(1)\\n        ] = _PD;\\n\\n        emit UpdatedPersonalSpace(\\n            allPersonalSpaces[personalSpaceIndex[_SD.spaceId].sub(1)]\\n        );\\n    }\\n\\n    function fundPersonalSpace(\\n        string memory _spaceId,\\n        uint256 _amount\\n    ) external {\\n        require(personalSpaceIndex[_spaceId] != 0, \\\"SpaceId does not exist\\\");\\n        require(\\n            myPersonalSpaceIdx[msg.sender][_spaceId] != 0,\\n            \\\"SpaceId does not exist\\\"\\n        );\\n        PersonalDetails memory _PD = allPersonalSpaces[\\n            personalSpaceIndex[_spaceId].sub(1)\\n        ];\\n        require(\\n            _PD.SS.currentFundState == FundsState.isFundable,\\n            \\\"Funding is not allowed / Fully funded\\\"\\n        );\\n        require(\\n            _PD.SS.currentActivityState == ActivityState.isActive,\\n            \\\"Space should be active\\\"\\n        );\\n        require(\\n            _PD.SD.deadline > block.timestamp,\\n            \\\"Deadline must be in future\\\"\\n        );\\n        require(_PD.SD.goalAmount > 0, \\\"Goal must be greater than 0\\\");\\n        require(_amount > 0, \\\"Amount must be greater than 0\\\");\\n        require(\\n            _PD.SD.token.transferFrom(msg.sender, address(this), _amount),\\n            \\\"Transfer failed\\\"\\n        );\\n        //_PD.token.transferFrom(msg.sender, address(this), _amount);\\n        allPersonalSpaces[personalSpaceIndex[_spaceId].sub(1)]\\n            .currentBalance = _PD.currentBalance.add(_amount);\\n        myPersonalSpaces[msg.sender][\\n            myPersonalSpaceIdx[msg.sender][_spaceId].sub(1)\\n        ].currentBalance = _PD.currentBalance.add(_amount);\\n\\n        emit FundedPersonalSpace(msg.sender, _spaceId, _amount);\\n\\n        //check if current balance is greater than goal amount and change state\\n        if (\\n            allPersonalSpaces[personalSpaceIndex[_spaceId].sub(1)]\\n                .currentBalance >=\\n            allPersonalSpaces[personalSpaceIndex[_spaceId].sub(1)].SD.goalAmount\\n        ) {\\n            allPersonalSpaces[personalSpaceIndex[_spaceId].sub(1)]\\n                .SS\\n                .currentFundState = FundsState.isFullyFunded;\\n            myPersonalSpaces[msg.sender][\\n                myPersonalSpaceIdx[msg.sender][_spaceId].sub(1)\\n            ].SS.currentFundState = FundsState.isFullyFunded;\\n        }\\n    }\\n\\n    function withdrawFromPersonalSpace(\\n        string memory _spaceId,\\n        uint256 _amount\\n    ) external {\\n        require(personalSpaceIndex[_spaceId] != 0, \\\"SpaceId does not exist\\\");\\n        require(\\n            myPersonalSpaceIdx[msg.sender][_spaceId] != 0,\\n            \\\"SpaceId does not exist\\\"\\n        );\\n        PersonalDetails memory _PD = allPersonalSpaces[\\n            personalSpaceIndex[_spaceId].sub(1)\\n        ];\\n        require(_PD.SD.owner == msg.sender, \\\"Must be owner\\\");\\n        require(\\n            _PD.SS.currentActivityState == ActivityState.isActive,\\n            \\\"Space must be active\\\"\\n        );\\n        require(_PD.SD.goalAmount > 0, \\\"Goal must be greater than 0\\\");\\n        require(_amount > 0, \\\"Amount must be greater than 0\\\");\\n        require(\\n            _PD.currentBalance >= _amount,\\n            \\\"Amount must be less than current balance\\\"\\n        );\\n        require(_PD.SD.token.transfer(msg.sender, _amount), \\\"Transfer failed\\\");\\n        allPersonalSpaces[personalSpaceIndex[_spaceId].sub(1)]\\n            .currentBalance = _PD.currentBalance.sub(_amount);\\n        myPersonalSpaces[msg.sender][\\n            myPersonalSpaceIdx[msg.sender][_spaceId].sub(1)\\n        ].currentBalance = _PD.currentBalance.sub(_amount);\\n\\n        emit WithdrawnPersonalSpace(msg.sender, _spaceId, _amount);\\n\\n        //check if current balance is less than goal amount and change state\\n        if (\\n            allPersonalSpaces[personalSpaceIndex[_spaceId].sub(1)]\\n                .currentBalance <\\n            allPersonalSpaces[personalSpaceIndex[_spaceId].sub(1)].SD.goalAmount\\n        ) {\\n            allPersonalSpaces[personalSpaceIndex[_spaceId].sub(1)]\\n                .SS = SpaceStates(\\n                FundsState.isFundable,\\n                ActivityState.isActive\\n            );\\n            myPersonalSpaces[msg.sender][\\n                myPersonalSpaceIdx[msg.sender][_spaceId].sub(1)\\n            ].SS = SpaceStates(FundsState.isFundable, ActivityState.isActive);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x165c16c52118236502dc27609881b72549bf36fea5c1156324a8a189a5b02c21\",\"license\":\"Apache 2.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50613388806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80636b89336b116100665780636b89336b146101195780637bad32e4146101215780638253c07314610134578063e268ccc31461013c578063ec1ef5971461014f57600080fd5b806351b43d891461009857806361487607146100c15780636237f0e0146100d657806363c5e08a146100f6575b600080fd5b6100ab6100a6366004612a47565b610162565b6040516100b89190612bc7565b60405180910390f35b6100d46100cf366004612cf5565b61045c565b005b6100e96100e4366004612d3a565b610caf565b6040516100b89190612d77565b610109610104366004612d8a565b610fe8565b60405190151581526020016100b8565b6100ab61105f565b6100d461012f366004612dea565b611343565b6100ab611949565b6100d461014a366004612cf5565b611c2f565b6100d461015d366004612dea565b6123da565b6001600160a01b0381166000908152600260209081526040808320805482518185028101850190935280835260609492939192909184015b82821015610451576000848152602090206040805161014081019091526009840290910180546001600160a01b039081166060840190815260018301549091166080840152600282018054849291849160a0850191906101f990612ed8565b80601f016020809104026020016040519081016040528092919081815260200182805461022590612ed8565b80156102725780601f1061024757610100808354040283529160200191610272565b820191906000526020600020905b81548152906001019060200180831161025557829003601f168201915b5050505050815260200160038201805461028b90612ed8565b80601f01602080910402602001604051908101604052809291908181526020018280546102b790612ed8565b80156103045780601f106102d957610100808354040283529160200191610304565b820191906000526020600020905b8154815290600101906020018083116102e757829003601f168201915b5050505050815260200160048201805461031d90612ed8565b80601f016020809104026020016040519081016040528092919081815260200182805461034990612ed8565b80156103965780601f1061036b57610100808354040283529160200191610396565b820191906000526020600020905b81548152906001019060200180831161037957829003601f168201915b50505050508152602001600582015481526020016006820154815250508152602001600782016040518060400160405290816000820160009054906101000a900460ff1660018111156103eb576103eb612b3d565b60018111156103fc576103fc612b3d565b81528154602090910190610100900460ff16600181111561041f5761041f612b3d565b600181111561043057610430612b3d565b8152505081526020016008820154815250508152602001906001019061019a565b505050509050919050565b60018260405161046c9190612f12565b9081526020016040518091039020546000036104a35760405162461bcd60e51b815260040161049a90612f2e565b60405180910390fd5b336000908152600360205260409081902090516104c1908490612f12565b9081526020016040518091039020546000036104ef5760405162461bcd60e51b815260040161049a90612f2e565b60008061051c600180866040516105069190612f12565b9081526040519081900360200190205490612987565b8154811061052c5761052c612f5e565b6000918252602090912060408051610140810190915260099092020180546001600160a01b039081166060840190815260018301549091166080840152600282018054849291849160a08501919061058390612ed8565b80601f01602080910402602001604051908101604052809291908181526020018280546105af90612ed8565b80156105fc5780601f106105d1576101008083540402835291602001916105fc565b820191906000526020600020905b8154815290600101906020018083116105df57829003601f168201915b5050505050815260200160038201805461061590612ed8565b80601f016020809104026020016040519081016040528092919081815260200182805461064190612ed8565b801561068e5780601f106106635761010080835404028352916020019161068e565b820191906000526020600020905b81548152906001019060200180831161067157829003601f168201915b505050505081526020016004820180546106a790612ed8565b80601f01602080910402602001604051908101604052809291908181526020018280546106d390612ed8565b80156107205780601f106106f557610100808354040283529160200191610720565b820191906000526020600020905b81548152906001019060200180831161070357829003601f168201915b50505050508152602001600582015481526020016006820154815250508152602001600782016040518060400160405290816000820160009054906101000a900460ff16600181111561077557610775612b3d565b600181111561078657610786612b3d565b81528154602090910190610100900460ff1660018111156107a9576107a9612b3d565b60018111156107ba576107ba612b3d565b905250815260089190910154602091820152815101519091506001600160a01b031633146107fa5760405162461bcd60e51b815260040161049a90612f74565b6000816020015160200151600181111561081657610816612b3d565b1461085a5760405162461bcd60e51b81526020600482015260146024820152735370616365206d7573742062652061637469766560601b604482015260640161049a565b805160a0015161087c5760405162461bcd60e51b815260040161049a90612f9b565b600082116108cc5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260640161049a565b81816040015110156109315760405162461bcd60e51b815260206004820152602860248201527f416d6f756e74206d757374206265206c657373207468616e2063757272656e746044820152672062616c616e636560c01b606482015260840161049a565b80515160405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610982573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a69190612fd2565b6109e45760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161049a565b60408101516109f39083612987565b6000610a09600180876040516105069190612f12565b81548110610a1957610a19612f5e565b60009182526020909120600860099092020101556040810151610a3c9083612987565b33600090815260026020908152604080832060039092529182902091519091610a6e9160019190610506908990612f12565b81548110610a7e57610a7e612f5e565b9060005260206000209060090201600801819055507fa2a1f683d49301488bb1871ead0d1496d3e39a23ca5cb633548dc8a93d867059338484604051610ac693929190612ff4565b60405180910390a16000610ae4600180866040516105069190612f12565b81548110610af457610af4612f5e565b9060005260206000209060090201600001600501546000610b1f600180876040516105069190612f12565b81548110610b2f57610b2f612f5e565b9060005260206000209060090201600801541015610caa5760408051808201909152806000815260200160008152506000610b74600180876040516105069190612f12565b81548110610b8457610b84612f5e565b906000526020600020906009020160070160008201518160000160006101000a81548160ff02191690836001811115610bbf57610bbf612b3d565b021790555060208201518154829061ff001916610100836001811115610be757610be7612b3d565b0217905550506040805180820182526000808252602080830182905233825260028152838220600390915290839020925191935091610c2f9160019190610506908990612f12565b81548110610c3f57610c3f612f5e565b906000526020600020906009020160070160008201518160000160006101000a81548160ff02191690836001811115610c7a57610c7a612b3d565b021790555060208201518154829061ff001916610100836001811115610ca257610ca2612b3d565b021790555050505b505050565b610cb76129a6565b600182604051610cc79190612f12565b908152602001604051809103902054600003610d1c5760405162461bcd60e51b815260206004820152601460248201527314dc1858d948191bd95cc81b9bdd08195e1a5cdd60621b604482015260640161049a565b6000610d32600180856040516105069190612f12565b81548110610d4257610d42612f5e565b6000918252602090912060408051610140810190915260099092020180546001600160a01b039081166060840190815260018301549091166080840152600282018054849291849160a085019190610d9990612ed8565b80601f0160208091040260200160405190810160405280929190818152602001828054610dc590612ed8565b8015610e125780601f10610de757610100808354040283529160200191610e12565b820191906000526020600020905b815481529060010190602001808311610df557829003601f168201915b50505050508152602001600382018054610e2b90612ed8565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5790612ed8565b8015610ea45780601f10610e7957610100808354040283529160200191610ea4565b820191906000526020600020905b815481529060010190602001808311610e8757829003601f168201915b50505050508152602001600482018054610ebd90612ed8565b80601f0160208091040260200160405190810160405280929190818152602001828054610ee990612ed8565b8015610f365780601f10610f0b57610100808354040283529160200191610f36565b820191906000526020600020905b815481529060010190602001808311610f1957829003601f168201915b50505050508152602001600582015481526020016006820154815250508152602001600782016040518060400160405290816000820160009054906101000a900460ff166001811115610f8b57610f8b612b3d565b6001811115610f9c57610f9c612b3d565b81528154602090910190610100900460ff166001811115610fbf57610fbf612b3d565b6001811115610fd057610fd0612b3d565b90525081526008919091015460209091015292915050565b6000600182604051610ffa9190612f12565b90815260200160405180910390205460000361101857506000611059565b6001600160a01b03831660009081526003602052604090819020905161103f908490612f12565b908152602001604051809103902054600003611059575060005b92915050565b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561133a576000848152602090206040805161014081019091526009840290910180546001600160a01b039081166060840190815260018301549091166080840152600282018054849291849160a0850191906110e290612ed8565b80601f016020809104026020016040519081016040528092919081815260200182805461110e90612ed8565b801561115b5780601f106111305761010080835404028352916020019161115b565b820191906000526020600020905b81548152906001019060200180831161113e57829003601f168201915b5050505050815260200160038201805461117490612ed8565b80601f01602080910402602001604051908101604052809291908181526020018280546111a090612ed8565b80156111ed5780601f106111c2576101008083540402835291602001916111ed565b820191906000526020600020905b8154815290600101906020018083116111d057829003601f168201915b5050505050815260200160048201805461120690612ed8565b80601f016020809104026020016040519081016040528092919081815260200182805461123290612ed8565b801561127f5780601f106112545761010080835404028352916020019161127f565b820191906000526020600020905b81548152906001019060200180831161126257829003601f168201915b50505050508152602001600582015481526020016006820154815250508152602001600782016040518060400160405290816000820160009054906101000a900460ff1660018111156112d4576112d4612b3d565b60018111156112e5576112e5612b3d565b81528154602090910190610100900460ff16600181111561130857611308612b3d565b600181111561131957611319612b3d565b81525050815260200160088201548152505081526020019060010190611083565b50505050905090565b80602001516001600160a01b0316336001600160a01b0316146113785760405162461bcd60e51b815260040161049a90612f74565b6001816080015160405161138c9190612f12565b9081526020016040518091039020546000036113ba5760405162461bcd60e51b815260040161049a90612f2e565b33600090815260036020526040908190206080830151915190916113dd91612f12565b90815260200160405180910390205460000361140b5760405162461bcd60e51b815260040161049a90612f2e565b60208101516001600160a01b03166114615760405162461bcd60e51b81526020600482015260196024820152784f776e65722063616e6e6f742062652030206164647265737360381b604482015260640161049a565b80516001600160a01b03166114b45760405162461bcd60e51b8152602060048201526019602482015278546f6b656e2063616e6e6f742062652030206164647265737360381b604482015260640161049a565b6000816040015151116115005760405162461bcd60e51b81526020600482015260146024820152734e616d652063616e6e6f7420626520656d70747960601b604482015260640161049a565b428160c00151116115235760405162461bcd60e51b815260040161049a90613028565b60008160a00151116115475760405162461bcd60e51b815260040161049a90612f9b565b60008061156260018085608001516040516105069190612f12565b8154811061157257611572612f5e565b90600052602060002090600902016008015490506000806115a160018086608001516040516105069190612f12565b815481106115b1576115b1612f5e565b90600052602060002090600902016007016040518060400160405290816000820160009054906101000a900460ff1660018111156115f1576115f1612b3d565b600181111561160257611602612b3d565b81528154602090910190610100900460ff16600181111561162557611625612b3d565b600181111561163657611636612b3d565b8152505090506000604051806060016040528085815260200183815260200184815250905080600061167660018088608001516040516105069190612f12565b8154811061168657611686612f5e565b600091825260209182902083518051600990930290910180546001600160a01b039384166001600160a01b031991821617825593820151600182018054919094169416939093179091556040810151829060028201906116e690826130ad565b50606082015160038201906116fb90826130ad565b506080820151600482019061171090826130ad565b5060a0820151600582015560c09091015160069091015560208201518051600783018054909190829060ff19166001838181111561175057611750612b3d565b021790555060208201518154829061ff00191661010083600181111561177857611778612b3d565b02179055505050604091820151600890910155336000908152600260209081528282206003909152908290206080870151925184936117bf92600192909161050691612f12565b815481106117cf576117cf612f5e565b600091825260209182902083518051600990930290910180546001600160a01b039384166001600160a01b0319918216178255938201516001820180549190941694169390931790915560408101518290600282019061182f90826130ad565b506060820151600382019061184490826130ad565b506080820151600482019061185990826130ad565b5060a0820151600582015560c09091015160069091015560208201518051600783018054909190829060ff19166001838181111561189957611899612b3d565b021790555060208201518154829061ff0019166101008360018111156118c1576118c1612b3d565b02179055505050604082015181600801559050507f800520a57525983c659584cdbb2f3ea7ced763bc8278963d59bf0d8a4e8b2f2b600061191060018088608001516040516105069190612f12565b8154811061192057611920612f5e565b906000526020600020906009020160405161193b9190613215565b60405180910390a150505050565b336000908152600260209081526040808320805482518185028101850190935280835260609492939192909184015b8282101561133a576000848152602090206040805161014081019091526009840290910180546001600160a01b039081166060840190815260018301549091166080840152600282018054849291849160a0850191906119d790612ed8565b80601f0160208091040260200160405190810160405280929190818152602001828054611a0390612ed8565b8015611a505780601f10611a2557610100808354040283529160200191611a50565b820191906000526020600020905b815481529060010190602001808311611a3357829003601f168201915b50505050508152602001600382018054611a6990612ed8565b80601f0160208091040260200160405190810160405280929190818152602001828054611a9590612ed8565b8015611ae25780601f10611ab757610100808354040283529160200191611ae2565b820191906000526020600020905b815481529060010190602001808311611ac557829003601f168201915b50505050508152602001600482018054611afb90612ed8565b80601f0160208091040260200160405190810160405280929190818152602001828054611b2790612ed8565b8015611b745780601f10611b4957610100808354040283529160200191611b74565b820191906000526020600020905b815481529060010190602001808311611b5757829003601f168201915b50505050508152602001600582015481526020016006820154815250508152602001600782016040518060400160405290816000820160009054906101000a900460ff166001811115611bc957611bc9612b3d565b6001811115611bda57611bda612b3d565b81528154602090910190610100900460ff166001811115611bfd57611bfd612b3d565b6001811115611c0e57611c0e612b3d565b81525050815260200160088201548152505081526020019060010190611978565b600182604051611c3f9190612f12565b908152602001604051809103902054600003611c6d5760405162461bcd60e51b815260040161049a90612f2e565b33600090815260036020526040908190209051611c8b908490612f12565b908152602001604051809103902054600003611cb95760405162461bcd60e51b815260040161049a90612f2e565b600080611cd0600180866040516105069190612f12565b81548110611ce057611ce0612f5e565b6000918252602090912060408051610140810190915260099092020180546001600160a01b039081166060840190815260018301549091166080840152600282018054849291849160a085019190611d3790612ed8565b80601f0160208091040260200160405190810160405280929190818152602001828054611d6390612ed8565b8015611db05780601f10611d8557610100808354040283529160200191611db0565b820191906000526020600020905b815481529060010190602001808311611d9357829003601f168201915b50505050508152602001600382018054611dc990612ed8565b80601f0160208091040260200160405190810160405280929190818152602001828054611df590612ed8565b8015611e425780601f10611e1757610100808354040283529160200191611e42565b820191906000526020600020905b815481529060010190602001808311611e2557829003601f168201915b50505050508152602001600482018054611e5b90612ed8565b80601f0160208091040260200160405190810160405280929190818152602001828054611e8790612ed8565b8015611ed45780601f10611ea957610100808354040283529160200191611ed4565b820191906000526020600020905b815481529060010190602001808311611eb757829003601f168201915b50505050508152602001600582015481526020016006820154815250508152602001600782016040518060400160405290816000820160009054906101000a900460ff166001811115611f2957611f29612b3d565b6001811115611f3a57611f3a612b3d565b81528154602090910190610100900460ff166001811115611f5d57611f5d612b3d565b6001811115611f6e57611f6e612b3d565b905250815260089190910154602090910152905060006020820151516001811115611f9b57611f9b612b3d565b14611ff65760405162461bcd60e51b815260206004820152602560248201527f46756e64696e67206973206e6f7420616c6c6f776564202f2046756c6c7920666044820152641d5b99195960da1b606482015260840161049a565b6000816020015160200151600181111561201257612012612b3d565b146120585760405162461bcd60e51b815260206004820152601660248201527553706163652073686f756c642062652061637469766560501b604482015260640161049a565b805160c00151421061207c5760405162461bcd60e51b815260040161049a90613028565b805160a0015161209e5760405162461bcd60e51b815260040161049a90612f9b565b600082116120ee5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260640161049a565b8051516040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015612145573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121699190612fd2565b6121a75760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161049a565b60408101516121b6908361299a565b60006121cc600180876040516105069190612f12565b815481106121dc576121dc612f5e565b600091825260209091206008600990920201015560408101516121ff908361299a565b336000908152600260209081526040808320600390925291829020915190916122319160019190610506908990612f12565b8154811061224157612241612f5e565b9060005260206000209060090201600801819055507fc4d0a7b886a02a6c55ae1008bf54049b9bcd60533a16c079ddbe94ca7ea8d07633848460405161228993929190612ff4565b60405180910390a160006122a7600180866040516105069190612f12565b815481106122b7576122b7612f5e565b90600052602060002090600902016000016005015460006122e2600180876040516105069190612f12565b815481106122f2576122f2612f5e565b90600052602060002090600902016008015410610caa5760016000612321600180876040516105069190612f12565b8154811061233157612331612f5e565b60009182526020909120600760099092020101805460ff19166001838181111561235d5761235d612b3d565b0217905550336000908152600260209081526040808320600390925291829020915160019261239491849190610506908990612f12565b815481106123a4576123a4612f5e565b60009182526020909120600760099092020101805460ff1916600183818111156123d0576123d0612b3d565b0217905550505050565b80602001516001600160a01b0316336001600160a01b03161461240f5760405162461bcd60e51b815260040161049a90612f74565b600181608001516040516124239190612f12565b90815260200160405180910390205460001461247a5760405162461bcd60e51b81526020600482015260166024820152755370616365496420616c72656164792065786973747360501b604482015260640161049a565b336000908152600360205260409081902060808301519151909161249d91612f12565b9081526020016040518091039020546000146124f45760405162461bcd60e51b81526020600482015260166024820152755370616365496420616c72656164792065786973747360501b604482015260640161049a565b60208101516001600160a01b031661254a5760405162461bcd60e51b81526020600482015260196024820152784f776e65722063616e6e6f742062652030206164647265737360381b604482015260640161049a565b80516001600160a01b031661259d5760405162461bcd60e51b8152602060048201526019602482015278546f6b656e2063616e6e6f742062652030206164647265737360381b604482015260640161049a565b6000816040015151116125e95760405162461bcd60e51b81526020600482015260146024820152734e616d652063616e6e6f7420626520656d70747960601b604482015260640161049a565b428160c001511161260c5760405162461bcd60e51b815260040161049a90613028565b60008160a00151116126305760405162461bcd60e51b815260040161049a90612f9b565b6040805180820182526000808252602080830182905283516060810185528581528082018490528085018390528254600181018455838052815180517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563600990930292830180546001600160a01b03199081166001600160a01b03938416178255958301517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5648501805490971692169190911790945595860151949593949193849392909183917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5659091019061272690826130ad565b506060820151600382019061273b90826130ad565b506080820151600482019061275090826130ad565b5060a0820151600582015560c09091015160069091015560208201518051600783018054909190829060ff19166001838181111561279057612790612b3d565b021790555060208201518154829061ff0019166101008360018111156127b8576127b8612b3d565b02179055505050604082015181600801555050600080549050600185608001516040516127e59190612f12565b908152604080519182900360209081019092209290925533600090815260028083528382208054600181810183559184529284902086518051600990950290910180546001600160a01b039586166001600160a01b031991821617825595820151928101805493909516929095169190911790925592810151849383919082019061287090826130ad565b506060820151600382019061288590826130ad565b506080820151600482019061289a90826130ad565b5060a0820151600582015560c09091015160069091015560208201518051600783018054909190829060ff1916600183818111156128da576128da612b3d565b021790555060208201518154829061ff00191661010083600181111561290257612902612b3d565b02179055505050604091820151600890910155336000908152600260209081528282205460039091529082902060808701519251919290916129449190612f12565b9081526020016040518091039020819055507f9b72b7089907db0c0a5e06c588ef25bd4d9bff0ff4c046f7da7a777e455a613e338560405161193b9291906132f2565b6000612993828461332c565b9392505050565b6000612993828461333f565b6040518060600160405280612a036040518060e0016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001606081526020016060815260200160008152602001600081525090565b8152602001612a22604080518082019091526000808252602082015290565b8152602001600081525090565b6001600160a01b0381168114612a4457600080fd5b50565b600060208284031215612a5957600080fd5b813561299381612a2f565b60005b83811015612a7f578181015183820152602001612a67565b50506000910152565b60008151808452612aa0816020860160208601612a64565b601f01601f19169290920160200192915050565b600060018060a01b0380835116845280602084015116602085015250604082015160e06040850152612ae960e0850182612a88565b905060608301518482036060860152612b028282612a88565b91505060808301518482036080860152612b1c8282612a88565b91505060a083015160a085015260c083015160c08501528091505092915050565b634e487b7160e01b600052602160045260246000fd5b60028110612a4457634e487b7160e01b600052602160045260246000fd5b6000815160808452612b866080850182612ab4565b905060208301518051612b9881612b53565b6020868101919091520151612bac81612b53565b80604086015250604083015160608501528091505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612c1c57603f19888603018452612c0a858351612b71565b94509285019290850190600101612bee565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715612c6257612c62612c29565b60405290565b600082601f830112612c7957600080fd5b813567ffffffffffffffff80821115612c9457612c94612c29565b604051601f8301601f19908116603f01168101908282118183101715612cbc57612cbc612c29565b81604052838152866020858801011115612cd557600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215612d0857600080fd5b823567ffffffffffffffff811115612d1f57600080fd5b612d2b85828601612c68565b95602094909401359450505050565b600060208284031215612d4c57600080fd5b813567ffffffffffffffff811115612d6357600080fd5b612d6f84828501612c68565b949350505050565b6020815260006129936020830184612b71565b60008060408385031215612d9d57600080fd5b8235612da881612a2f565b9150602083013567ffffffffffffffff811115612dc457600080fd5b612dd085828601612c68565b9150509250929050565b8035612de581612a2f565b919050565b600060208284031215612dfc57600080fd5b813567ffffffffffffffff80821115612e1457600080fd5b9083019060e08286031215612e2857600080fd5b612e30612c3f565b612e3983612dda565b8152612e4760208401612dda565b6020820152604083013582811115612e5e57600080fd5b612e6a87828601612c68565b604083015250606083013582811115612e8257600080fd5b612e8e87828601612c68565b606083015250608083013582811115612ea657600080fd5b612eb287828601612c68565b60808301525060a083013560a082015260c083013560c082015280935050505092915050565b600181811c90821680612eec57607f821691505b602082108103612f0c57634e487b7160e01b600052602260045260246000fd5b50919050565b60008251612f24818460208701612a64565b9190910192915050565b60208082526016908201527514dc1858d9525908191bd95cc81b9bdd08195e1a5cdd60521b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6020808252600d908201526c26bab9ba1031329037bbb732b960991b604082015260600190565b6020808252601b908201527f476f616c206d7573742062652067726561746572207468616e20300000000000604082015260600190565b600060208284031215612fe457600080fd5b8151801515811461299357600080fd5b6001600160a01b038416815260606020820181905260009061301890830185612a88565b9050826040830152949350505050565b6020808252601a908201527f446561646c696e65206d75737420626520696e20667574757265000000000000604082015260600190565b601f821115610caa57600081815260208120601f850160051c810160208610156130865750805b601f850160051c820191505b818110156130a557828155600101613092565b505050505050565b815167ffffffffffffffff8111156130c7576130c7612c29565b6130db816130d58454612ed8565b8461305f565b602080601f83116001811461311057600084156130f85750858301515b600019600386901b1c1916600185901b1785556130a5565b600085815260208120601f198616915b8281101561313f57888601518255948401946001909101908401613120565b508582101561315d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000815461317a81612ed8565b80855260206001838116801561319757600181146131b1576131df565b60ff1985168884015283151560051b8801830195506131df565b866000528260002060005b858110156131d75781548a82018601529083019084016131bc565b890184019650505b505050505092915050565b805460ff81166131f981612b53565b835260081c60ff1661320a81612b53565b806020840152505050565b602081526080602082015261324560a0820161323884546001600160a01b031690565b6001600160a01b03169052565b600061325b60018401546001600160a01b031690565b6001600160a01b031660c083015260e08083015261328061018083016002850161316d565b609f19808483030161010085015261329b826003870161316d565b91508084830301610120850152506132b6816004860161316d565b9050600584015461014084015260068401546101608401526132de60408401600786016131ea565b600884015460808401528091505092915050565b6001600160a01b0383168152604060208201819052600090612d6f90830184612ab4565b634e487b7160e01b600052601160045260246000fd5b8181038181111561105957611059613316565b808201808211156110595761105961331656fea26469706673582212200b0c57a92bb4a02e64b1628f88a721c48a5e13fa78e130798e533a71f511a39d64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80636b89336b116100665780636b89336b146101195780637bad32e4146101215780638253c07314610134578063e268ccc31461013c578063ec1ef5971461014f57600080fd5b806351b43d891461009857806361487607146100c15780636237f0e0146100d657806363c5e08a146100f6575b600080fd5b6100ab6100a6366004612a47565b610162565b6040516100b89190612bc7565b60405180910390f35b6100d46100cf366004612cf5565b61045c565b005b6100e96100e4366004612d3a565b610caf565b6040516100b89190612d77565b610109610104366004612d8a565b610fe8565b60405190151581526020016100b8565b6100ab61105f565b6100d461012f366004612dea565b611343565b6100ab611949565b6100d461014a366004612cf5565b611c2f565b6100d461015d366004612dea565b6123da565b6001600160a01b0381166000908152600260209081526040808320805482518185028101850190935280835260609492939192909184015b82821015610451576000848152602090206040805161014081019091526009840290910180546001600160a01b039081166060840190815260018301549091166080840152600282018054849291849160a0850191906101f990612ed8565b80601f016020809104026020016040519081016040528092919081815260200182805461022590612ed8565b80156102725780601f1061024757610100808354040283529160200191610272565b820191906000526020600020905b81548152906001019060200180831161025557829003601f168201915b5050505050815260200160038201805461028b90612ed8565b80601f01602080910402602001604051908101604052809291908181526020018280546102b790612ed8565b80156103045780601f106102d957610100808354040283529160200191610304565b820191906000526020600020905b8154815290600101906020018083116102e757829003601f168201915b5050505050815260200160048201805461031d90612ed8565b80601f016020809104026020016040519081016040528092919081815260200182805461034990612ed8565b80156103965780601f1061036b57610100808354040283529160200191610396565b820191906000526020600020905b81548152906001019060200180831161037957829003601f168201915b50505050508152602001600582015481526020016006820154815250508152602001600782016040518060400160405290816000820160009054906101000a900460ff1660018111156103eb576103eb612b3d565b60018111156103fc576103fc612b3d565b81528154602090910190610100900460ff16600181111561041f5761041f612b3d565b600181111561043057610430612b3d565b8152505081526020016008820154815250508152602001906001019061019a565b505050509050919050565b60018260405161046c9190612f12565b9081526020016040518091039020546000036104a35760405162461bcd60e51b815260040161049a90612f2e565b60405180910390fd5b336000908152600360205260409081902090516104c1908490612f12565b9081526020016040518091039020546000036104ef5760405162461bcd60e51b815260040161049a90612f2e565b60008061051c600180866040516105069190612f12565b9081526040519081900360200190205490612987565b8154811061052c5761052c612f5e565b6000918252602090912060408051610140810190915260099092020180546001600160a01b039081166060840190815260018301549091166080840152600282018054849291849160a08501919061058390612ed8565b80601f01602080910402602001604051908101604052809291908181526020018280546105af90612ed8565b80156105fc5780601f106105d1576101008083540402835291602001916105fc565b820191906000526020600020905b8154815290600101906020018083116105df57829003601f168201915b5050505050815260200160038201805461061590612ed8565b80601f016020809104026020016040519081016040528092919081815260200182805461064190612ed8565b801561068e5780601f106106635761010080835404028352916020019161068e565b820191906000526020600020905b81548152906001019060200180831161067157829003601f168201915b505050505081526020016004820180546106a790612ed8565b80601f01602080910402602001604051908101604052809291908181526020018280546106d390612ed8565b80156107205780601f106106f557610100808354040283529160200191610720565b820191906000526020600020905b81548152906001019060200180831161070357829003601f168201915b50505050508152602001600582015481526020016006820154815250508152602001600782016040518060400160405290816000820160009054906101000a900460ff16600181111561077557610775612b3d565b600181111561078657610786612b3d565b81528154602090910190610100900460ff1660018111156107a9576107a9612b3d565b60018111156107ba576107ba612b3d565b905250815260089190910154602091820152815101519091506001600160a01b031633146107fa5760405162461bcd60e51b815260040161049a90612f74565b6000816020015160200151600181111561081657610816612b3d565b1461085a5760405162461bcd60e51b81526020600482015260146024820152735370616365206d7573742062652061637469766560601b604482015260640161049a565b805160a0015161087c5760405162461bcd60e51b815260040161049a90612f9b565b600082116108cc5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260640161049a565b81816040015110156109315760405162461bcd60e51b815260206004820152602860248201527f416d6f756e74206d757374206265206c657373207468616e2063757272656e746044820152672062616c616e636560c01b606482015260840161049a565b80515160405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610982573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a69190612fd2565b6109e45760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161049a565b60408101516109f39083612987565b6000610a09600180876040516105069190612f12565b81548110610a1957610a19612f5e565b60009182526020909120600860099092020101556040810151610a3c9083612987565b33600090815260026020908152604080832060039092529182902091519091610a6e9160019190610506908990612f12565b81548110610a7e57610a7e612f5e565b9060005260206000209060090201600801819055507fa2a1f683d49301488bb1871ead0d1496d3e39a23ca5cb633548dc8a93d867059338484604051610ac693929190612ff4565b60405180910390a16000610ae4600180866040516105069190612f12565b81548110610af457610af4612f5e565b9060005260206000209060090201600001600501546000610b1f600180876040516105069190612f12565b81548110610b2f57610b2f612f5e565b9060005260206000209060090201600801541015610caa5760408051808201909152806000815260200160008152506000610b74600180876040516105069190612f12565b81548110610b8457610b84612f5e565b906000526020600020906009020160070160008201518160000160006101000a81548160ff02191690836001811115610bbf57610bbf612b3d565b021790555060208201518154829061ff001916610100836001811115610be757610be7612b3d565b0217905550506040805180820182526000808252602080830182905233825260028152838220600390915290839020925191935091610c2f9160019190610506908990612f12565b81548110610c3f57610c3f612f5e565b906000526020600020906009020160070160008201518160000160006101000a81548160ff02191690836001811115610c7a57610c7a612b3d565b021790555060208201518154829061ff001916610100836001811115610ca257610ca2612b3d565b021790555050505b505050565b610cb76129a6565b600182604051610cc79190612f12565b908152602001604051809103902054600003610d1c5760405162461bcd60e51b815260206004820152601460248201527314dc1858d948191bd95cc81b9bdd08195e1a5cdd60621b604482015260640161049a565b6000610d32600180856040516105069190612f12565b81548110610d4257610d42612f5e565b6000918252602090912060408051610140810190915260099092020180546001600160a01b039081166060840190815260018301549091166080840152600282018054849291849160a085019190610d9990612ed8565b80601f0160208091040260200160405190810160405280929190818152602001828054610dc590612ed8565b8015610e125780601f10610de757610100808354040283529160200191610e12565b820191906000526020600020905b815481529060010190602001808311610df557829003601f168201915b50505050508152602001600382018054610e2b90612ed8565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5790612ed8565b8015610ea45780601f10610e7957610100808354040283529160200191610ea4565b820191906000526020600020905b815481529060010190602001808311610e8757829003601f168201915b50505050508152602001600482018054610ebd90612ed8565b80601f0160208091040260200160405190810160405280929190818152602001828054610ee990612ed8565b8015610f365780601f10610f0b57610100808354040283529160200191610f36565b820191906000526020600020905b815481529060010190602001808311610f1957829003601f168201915b50505050508152602001600582015481526020016006820154815250508152602001600782016040518060400160405290816000820160009054906101000a900460ff166001811115610f8b57610f8b612b3d565b6001811115610f9c57610f9c612b3d565b81528154602090910190610100900460ff166001811115610fbf57610fbf612b3d565b6001811115610fd057610fd0612b3d565b90525081526008919091015460209091015292915050565b6000600182604051610ffa9190612f12565b90815260200160405180910390205460000361101857506000611059565b6001600160a01b03831660009081526003602052604090819020905161103f908490612f12565b908152602001604051809103902054600003611059575060005b92915050565b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561133a576000848152602090206040805161014081019091526009840290910180546001600160a01b039081166060840190815260018301549091166080840152600282018054849291849160a0850191906110e290612ed8565b80601f016020809104026020016040519081016040528092919081815260200182805461110e90612ed8565b801561115b5780601f106111305761010080835404028352916020019161115b565b820191906000526020600020905b81548152906001019060200180831161113e57829003601f168201915b5050505050815260200160038201805461117490612ed8565b80601f01602080910402602001604051908101604052809291908181526020018280546111a090612ed8565b80156111ed5780601f106111c2576101008083540402835291602001916111ed565b820191906000526020600020905b8154815290600101906020018083116111d057829003601f168201915b5050505050815260200160048201805461120690612ed8565b80601f016020809104026020016040519081016040528092919081815260200182805461123290612ed8565b801561127f5780601f106112545761010080835404028352916020019161127f565b820191906000526020600020905b81548152906001019060200180831161126257829003601f168201915b50505050508152602001600582015481526020016006820154815250508152602001600782016040518060400160405290816000820160009054906101000a900460ff1660018111156112d4576112d4612b3d565b60018111156112e5576112e5612b3d565b81528154602090910190610100900460ff16600181111561130857611308612b3d565b600181111561131957611319612b3d565b81525050815260200160088201548152505081526020019060010190611083565b50505050905090565b80602001516001600160a01b0316336001600160a01b0316146113785760405162461bcd60e51b815260040161049a90612f74565b6001816080015160405161138c9190612f12565b9081526020016040518091039020546000036113ba5760405162461bcd60e51b815260040161049a90612f2e565b33600090815260036020526040908190206080830151915190916113dd91612f12565b90815260200160405180910390205460000361140b5760405162461bcd60e51b815260040161049a90612f2e565b60208101516001600160a01b03166114615760405162461bcd60e51b81526020600482015260196024820152784f776e65722063616e6e6f742062652030206164647265737360381b604482015260640161049a565b80516001600160a01b03166114b45760405162461bcd60e51b8152602060048201526019602482015278546f6b656e2063616e6e6f742062652030206164647265737360381b604482015260640161049a565b6000816040015151116115005760405162461bcd60e51b81526020600482015260146024820152734e616d652063616e6e6f7420626520656d70747960601b604482015260640161049a565b428160c00151116115235760405162461bcd60e51b815260040161049a90613028565b60008160a00151116115475760405162461bcd60e51b815260040161049a90612f9b565b60008061156260018085608001516040516105069190612f12565b8154811061157257611572612f5e565b90600052602060002090600902016008015490506000806115a160018086608001516040516105069190612f12565b815481106115b1576115b1612f5e565b90600052602060002090600902016007016040518060400160405290816000820160009054906101000a900460ff1660018111156115f1576115f1612b3d565b600181111561160257611602612b3d565b81528154602090910190610100900460ff16600181111561162557611625612b3d565b600181111561163657611636612b3d565b8152505090506000604051806060016040528085815260200183815260200184815250905080600061167660018088608001516040516105069190612f12565b8154811061168657611686612f5e565b600091825260209182902083518051600990930290910180546001600160a01b039384166001600160a01b031991821617825593820151600182018054919094169416939093179091556040810151829060028201906116e690826130ad565b50606082015160038201906116fb90826130ad565b506080820151600482019061171090826130ad565b5060a0820151600582015560c09091015160069091015560208201518051600783018054909190829060ff19166001838181111561175057611750612b3d565b021790555060208201518154829061ff00191661010083600181111561177857611778612b3d565b02179055505050604091820151600890910155336000908152600260209081528282206003909152908290206080870151925184936117bf92600192909161050691612f12565b815481106117cf576117cf612f5e565b600091825260209182902083518051600990930290910180546001600160a01b039384166001600160a01b0319918216178255938201516001820180549190941694169390931790915560408101518290600282019061182f90826130ad565b506060820151600382019061184490826130ad565b506080820151600482019061185990826130ad565b5060a0820151600582015560c09091015160069091015560208201518051600783018054909190829060ff19166001838181111561189957611899612b3d565b021790555060208201518154829061ff0019166101008360018111156118c1576118c1612b3d565b02179055505050604082015181600801559050507f800520a57525983c659584cdbb2f3ea7ced763bc8278963d59bf0d8a4e8b2f2b600061191060018088608001516040516105069190612f12565b8154811061192057611920612f5e565b906000526020600020906009020160405161193b9190613215565b60405180910390a150505050565b336000908152600260209081526040808320805482518185028101850190935280835260609492939192909184015b8282101561133a576000848152602090206040805161014081019091526009840290910180546001600160a01b039081166060840190815260018301549091166080840152600282018054849291849160a0850191906119d790612ed8565b80601f0160208091040260200160405190810160405280929190818152602001828054611a0390612ed8565b8015611a505780601f10611a2557610100808354040283529160200191611a50565b820191906000526020600020905b815481529060010190602001808311611a3357829003601f168201915b50505050508152602001600382018054611a6990612ed8565b80601f0160208091040260200160405190810160405280929190818152602001828054611a9590612ed8565b8015611ae25780601f10611ab757610100808354040283529160200191611ae2565b820191906000526020600020905b815481529060010190602001808311611ac557829003601f168201915b50505050508152602001600482018054611afb90612ed8565b80601f0160208091040260200160405190810160405280929190818152602001828054611b2790612ed8565b8015611b745780601f10611b4957610100808354040283529160200191611b74565b820191906000526020600020905b815481529060010190602001808311611b5757829003601f168201915b50505050508152602001600582015481526020016006820154815250508152602001600782016040518060400160405290816000820160009054906101000a900460ff166001811115611bc957611bc9612b3d565b6001811115611bda57611bda612b3d565b81528154602090910190610100900460ff166001811115611bfd57611bfd612b3d565b6001811115611c0e57611c0e612b3d565b81525050815260200160088201548152505081526020019060010190611978565b600182604051611c3f9190612f12565b908152602001604051809103902054600003611c6d5760405162461bcd60e51b815260040161049a90612f2e565b33600090815260036020526040908190209051611c8b908490612f12565b908152602001604051809103902054600003611cb95760405162461bcd60e51b815260040161049a90612f2e565b600080611cd0600180866040516105069190612f12565b81548110611ce057611ce0612f5e565b6000918252602090912060408051610140810190915260099092020180546001600160a01b039081166060840190815260018301549091166080840152600282018054849291849160a085019190611d3790612ed8565b80601f0160208091040260200160405190810160405280929190818152602001828054611d6390612ed8565b8015611db05780601f10611d8557610100808354040283529160200191611db0565b820191906000526020600020905b815481529060010190602001808311611d9357829003601f168201915b50505050508152602001600382018054611dc990612ed8565b80601f0160208091040260200160405190810160405280929190818152602001828054611df590612ed8565b8015611e425780601f10611e1757610100808354040283529160200191611e42565b820191906000526020600020905b815481529060010190602001808311611e2557829003601f168201915b50505050508152602001600482018054611e5b90612ed8565b80601f0160208091040260200160405190810160405280929190818152602001828054611e8790612ed8565b8015611ed45780601f10611ea957610100808354040283529160200191611ed4565b820191906000526020600020905b815481529060010190602001808311611eb757829003601f168201915b50505050508152602001600582015481526020016006820154815250508152602001600782016040518060400160405290816000820160009054906101000a900460ff166001811115611f2957611f29612b3d565b6001811115611f3a57611f3a612b3d565b81528154602090910190610100900460ff166001811115611f5d57611f5d612b3d565b6001811115611f6e57611f6e612b3d565b905250815260089190910154602090910152905060006020820151516001811115611f9b57611f9b612b3d565b14611ff65760405162461bcd60e51b815260206004820152602560248201527f46756e64696e67206973206e6f7420616c6c6f776564202f2046756c6c7920666044820152641d5b99195960da1b606482015260840161049a565b6000816020015160200151600181111561201257612012612b3d565b146120585760405162461bcd60e51b815260206004820152601660248201527553706163652073686f756c642062652061637469766560501b604482015260640161049a565b805160c00151421061207c5760405162461bcd60e51b815260040161049a90613028565b805160a0015161209e5760405162461bcd60e51b815260040161049a90612f9b565b600082116120ee5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260640161049a565b8051516040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015612145573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121699190612fd2565b6121a75760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161049a565b60408101516121b6908361299a565b60006121cc600180876040516105069190612f12565b815481106121dc576121dc612f5e565b600091825260209091206008600990920201015560408101516121ff908361299a565b336000908152600260209081526040808320600390925291829020915190916122319160019190610506908990612f12565b8154811061224157612241612f5e565b9060005260206000209060090201600801819055507fc4d0a7b886a02a6c55ae1008bf54049b9bcd60533a16c079ddbe94ca7ea8d07633848460405161228993929190612ff4565b60405180910390a160006122a7600180866040516105069190612f12565b815481106122b7576122b7612f5e565b90600052602060002090600902016000016005015460006122e2600180876040516105069190612f12565b815481106122f2576122f2612f5e565b90600052602060002090600902016008015410610caa5760016000612321600180876040516105069190612f12565b8154811061233157612331612f5e565b60009182526020909120600760099092020101805460ff19166001838181111561235d5761235d612b3d565b0217905550336000908152600260209081526040808320600390925291829020915160019261239491849190610506908990612f12565b815481106123a4576123a4612f5e565b60009182526020909120600760099092020101805460ff1916600183818111156123d0576123d0612b3d565b0217905550505050565b80602001516001600160a01b0316336001600160a01b03161461240f5760405162461bcd60e51b815260040161049a90612f74565b600181608001516040516124239190612f12565b90815260200160405180910390205460001461247a5760405162461bcd60e51b81526020600482015260166024820152755370616365496420616c72656164792065786973747360501b604482015260640161049a565b336000908152600360205260409081902060808301519151909161249d91612f12565b9081526020016040518091039020546000146124f45760405162461bcd60e51b81526020600482015260166024820152755370616365496420616c72656164792065786973747360501b604482015260640161049a565b60208101516001600160a01b031661254a5760405162461bcd60e51b81526020600482015260196024820152784f776e65722063616e6e6f742062652030206164647265737360381b604482015260640161049a565b80516001600160a01b031661259d5760405162461bcd60e51b8152602060048201526019602482015278546f6b656e2063616e6e6f742062652030206164647265737360381b604482015260640161049a565b6000816040015151116125e95760405162461bcd60e51b81526020600482015260146024820152734e616d652063616e6e6f7420626520656d70747960601b604482015260640161049a565b428160c001511161260c5760405162461bcd60e51b815260040161049a90613028565b60008160a00151116126305760405162461bcd60e51b815260040161049a90612f9b565b6040805180820182526000808252602080830182905283516060810185528581528082018490528085018390528254600181018455838052815180517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563600990930292830180546001600160a01b03199081166001600160a01b03938416178255958301517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5648501805490971692169190911790945595860151949593949193849392909183917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5659091019061272690826130ad565b506060820151600382019061273b90826130ad565b506080820151600482019061275090826130ad565b5060a0820151600582015560c09091015160069091015560208201518051600783018054909190829060ff19166001838181111561279057612790612b3d565b021790555060208201518154829061ff0019166101008360018111156127b8576127b8612b3d565b02179055505050604082015181600801555050600080549050600185608001516040516127e59190612f12565b908152604080519182900360209081019092209290925533600090815260028083528382208054600181810183559184529284902086518051600990950290910180546001600160a01b039586166001600160a01b031991821617825595820151928101805493909516929095169190911790925592810151849383919082019061287090826130ad565b506060820151600382019061288590826130ad565b506080820151600482019061289a90826130ad565b5060a0820151600582015560c09091015160069091015560208201518051600783018054909190829060ff1916600183818111156128da576128da612b3d565b021790555060208201518154829061ff00191661010083600181111561290257612902612b3d565b02179055505050604091820151600890910155336000908152600260209081528282205460039091529082902060808701519251919290916129449190612f12565b9081526020016040518091039020819055507f9b72b7089907db0c0a5e06c588ef25bd4d9bff0ff4c046f7da7a777e455a613e338560405161193b9291906132f2565b6000612993828461332c565b9392505050565b6000612993828461333f565b6040518060600160405280612a036040518060e0016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001606081526020016060815260200160008152602001600081525090565b8152602001612a22604080518082019091526000808252602082015290565b8152602001600081525090565b6001600160a01b0381168114612a4457600080fd5b50565b600060208284031215612a5957600080fd5b813561299381612a2f565b60005b83811015612a7f578181015183820152602001612a67565b50506000910152565b60008151808452612aa0816020860160208601612a64565b601f01601f19169290920160200192915050565b600060018060a01b0380835116845280602084015116602085015250604082015160e06040850152612ae960e0850182612a88565b905060608301518482036060860152612b028282612a88565b91505060808301518482036080860152612b1c8282612a88565b91505060a083015160a085015260c083015160c08501528091505092915050565b634e487b7160e01b600052602160045260246000fd5b60028110612a4457634e487b7160e01b600052602160045260246000fd5b6000815160808452612b866080850182612ab4565b905060208301518051612b9881612b53565b6020868101919091520151612bac81612b53565b80604086015250604083015160608501528091505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612c1c57603f19888603018452612c0a858351612b71565b94509285019290850190600101612bee565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715612c6257612c62612c29565b60405290565b600082601f830112612c7957600080fd5b813567ffffffffffffffff80821115612c9457612c94612c29565b604051601f8301601f19908116603f01168101908282118183101715612cbc57612cbc612c29565b81604052838152866020858801011115612cd557600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215612d0857600080fd5b823567ffffffffffffffff811115612d1f57600080fd5b612d2b85828601612c68565b95602094909401359450505050565b600060208284031215612d4c57600080fd5b813567ffffffffffffffff811115612d6357600080fd5b612d6f84828501612c68565b949350505050565b6020815260006129936020830184612b71565b60008060408385031215612d9d57600080fd5b8235612da881612a2f565b9150602083013567ffffffffffffffff811115612dc457600080fd5b612dd085828601612c68565b9150509250929050565b8035612de581612a2f565b919050565b600060208284031215612dfc57600080fd5b813567ffffffffffffffff80821115612e1457600080fd5b9083019060e08286031215612e2857600080fd5b612e30612c3f565b612e3983612dda565b8152612e4760208401612dda565b6020820152604083013582811115612e5e57600080fd5b612e6a87828601612c68565b604083015250606083013582811115612e8257600080fd5b612e8e87828601612c68565b606083015250608083013582811115612ea657600080fd5b612eb287828601612c68565b60808301525060a083013560a082015260c083013560c082015280935050505092915050565b600181811c90821680612eec57607f821691505b602082108103612f0c57634e487b7160e01b600052602260045260246000fd5b50919050565b60008251612f24818460208701612a64565b9190910192915050565b60208082526016908201527514dc1858d9525908191bd95cc81b9bdd08195e1a5cdd60521b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6020808252600d908201526c26bab9ba1031329037bbb732b960991b604082015260600190565b6020808252601b908201527f476f616c206d7573742062652067726561746572207468616e20300000000000604082015260600190565b600060208284031215612fe457600080fd5b8151801515811461299357600080fd5b6001600160a01b038416815260606020820181905260009061301890830185612a88565b9050826040830152949350505050565b6020808252601a908201527f446561646c696e65206d75737420626520696e20667574757265000000000000604082015260600190565b601f821115610caa57600081815260208120601f850160051c810160208610156130865750805b601f850160051c820191505b818110156130a557828155600101613092565b505050505050565b815167ffffffffffffffff8111156130c7576130c7612c29565b6130db816130d58454612ed8565b8461305f565b602080601f83116001811461311057600084156130f85750858301515b600019600386901b1c1916600185901b1785556130a5565b600085815260208120601f198616915b8281101561313f57888601518255948401946001909101908401613120565b508582101561315d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000815461317a81612ed8565b80855260206001838116801561319757600181146131b1576131df565b60ff1985168884015283151560051b8801830195506131df565b866000528260002060005b858110156131d75781548a82018601529083019084016131bc565b890184019650505b505050505092915050565b805460ff81166131f981612b53565b835260081c60ff1661320a81612b53565b806020840152505050565b602081526080602082015261324560a0820161323884546001600160a01b031690565b6001600160a01b03169052565b600061325b60018401546001600160a01b031690565b6001600160a01b031660c083015260e08083015261328061018083016002850161316d565b609f19808483030161010085015261329b826003870161316d565b91508084830301610120850152506132b6816004860161316d565b9050600584015461014084015260068401546101608401526132de60408401600786016131ea565b600884015460808401528091505092915050565b6001600160a01b0383168152604060208201819052600090612d6f90830184612ab4565b634e487b7160e01b600052601160045260246000fd5b8181038181111561105957611059613316565b808201808211156110595761105961331656fea26469706673582212200b0c57a92bb4a02e64b1628f88a721c48a5e13fa78e130798e533a71f511a39d64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10381,
        "contract": "src/Personal.sol:Personal",
        "label": "allPersonalSpaces",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_struct(PersonalDetails)10377_storage)dyn_storage"
      },
      {
        "astId": 10385,
        "contract": "src/Personal.sol:Personal",
        "label": "personalSpaceIndex",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_uint256)"
      },
      {
        "astId": 10391,
        "contract": "src/Personal.sol:Personal",
        "label": "myPersonalSpaces",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_array(t_struct(PersonalDetails)10377_storage)dyn_storage)"
      },
      {
        "astId": 10397,
        "contract": "src/Personal.sol:Personal",
        "label": "myPersonalSpaceIdx",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(PersonalDetails)10377_storage)dyn_storage": {
        "base": "t_struct(PersonalDetails)10377_storage",
        "encoding": "dynamic_array",
        "label": "struct Personal.PersonalDetails[]",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)77": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_enum(ActivityState)10361": {
        "encoding": "inplace",
        "label": "enum Personal.ActivityState",
        "numberOfBytes": "1"
      },
      "t_enum(FundsState)10358": {
        "encoding": "inplace",
        "label": "enum Personal.FundsState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_struct(PersonalDetails)10377_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Personal.PersonalDetails[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(PersonalDetails)10377_storage)dyn_storage"
      },
      "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(string => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_uint256)"
      },
      "t_mapping(t_string_memory_ptr,t_uint256)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(PersonalDetails)10377_storage": {
        "encoding": "inplace",
        "label": "struct Personal.PersonalDetails",
        "members": [
          {
            "astId": 10371,
            "contract": "src/Personal.sol:Personal",
            "label": "SD",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(SpaceDetails)10352_storage"
          },
          {
            "astId": 10374,
            "contract": "src/Personal.sol:Personal",
            "label": "SS",
            "offset": 0,
            "slot": "7",
            "type": "t_struct(SpaceStates)10368_storage"
          },
          {
            "astId": 10376,
            "contract": "src/Personal.sol:Personal",
            "label": "currentBalance",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(SpaceDetails)10352_storage": {
        "encoding": "inplace",
        "label": "struct SpaceDetails",
        "members": [
          {
            "astId": 10339,
            "contract": "src/Personal.sol:Personal",
            "label": "token",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)77"
          },
          {
            "astId": 10341,
            "contract": "src/Personal.sol:Personal",
            "label": "owner",
            "offset": 0,
            "slot": "1",
            "type": "t_address_payable"
          },
          {
            "astId": 10343,
            "contract": "src/Personal.sol:Personal",
            "label": "spaceName",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 10345,
            "contract": "src/Personal.sol:Personal",
            "label": "imgLink",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 10347,
            "contract": "src/Personal.sol:Personal",
            "label": "spaceId",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 10349,
            "contract": "src/Personal.sol:Personal",
            "label": "goalAmount",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 10351,
            "contract": "src/Personal.sol:Personal",
            "label": "deadline",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(SpaceStates)10368_storage": {
        "encoding": "inplace",
        "label": "struct Personal.SpaceStates",
        "members": [
          {
            "astId": 10364,
            "contract": "src/Personal.sol:Personal",
            "label": "currentFundState",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(FundsState)10358"
          },
          {
            "astId": 10367,
            "contract": "src/Personal.sol:Personal",
            "label": "currentActivityState",
            "offset": 1,
            "slot": "0",
            "type": "t_enum(ActivityState)10361"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}